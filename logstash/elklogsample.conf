input {
    beats {
        port => 5044 # tomcat
        codec => multiline {
            pattern => "^%{TIMESTAMP_ISO8601} "
            negate => true
            what => "previous"
        }
    }
    beats {
        port => 5045 # nginx
    }
}
filter {
    if [input_type] == "log" {
        if [type] == "tomcat" {
            fingerprint {
                method => "MD5"
                key => "KEY"
            }
            grok {
                match => {
                    "message" => "%{TIMESTAMP_ISO8601:ts_string} \[ %{PROG:program}:%{POSINT:pid:int} \] - \[ %{LOGLEVEL:level} \] %{GREEDYDATA:msg}"
                }
            }
            date {
                locale => "en"
                match => [ "ts_string", "yyyy-MM-dd HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss,SSS", "yyyy-MM-dd HH:mm:ss" ]
                timezone => "Asia/Shanghai"
                target => "ts"
            }
            if "_grokparsefailure" in [tags] {
                drop { }
            }
            mutate {
                remove_field => [ "beat" ]
            }
        }
        if [type] == "nginx" {
            fingerprint {
                method => "MD5"
                key => "KEY"
            }
            grok {
                match => {
                    "message" => "%{IPORHOST:ip} - %{USERNAME:remote_user} \[%{HTTPDATE:ts_string}\] %{QS:request} %{INT:status} %{INT:bytes} %{QS:referer} %{QS:agent} %{QS:ip_forward}"
                }
            }
            date {
                locale => "en"
                match => [ "ts_string", "dd/MMM/yyyy:HH:mm:ss Z", "ISO8601" ]
                timezone => "Asia/Shanghai"
                target => "ts"
            }
            if "_grokparsefailure" in [tags] {
                drop { }
            }
            mutate {
                remove_field => [ "beat" ]
                gsub => [
                    "request", "\"", "",
                    "referer", "\"", "",
                    "agent", "\"", "",
                    "ip_forward", "\"", ""
                ]
            }
        }
    }
}
output {
    if [input_type] == "log" {
        #stdout {
        #    codec => "rubydebug"
        #}
        elasticsearch {
            action => "index"
            index => "logs"
            document_id => "%{fingerprint}"
            hosts => ["<ELK_SERVER_INTERNAL_IP>:9200"]
            flush_size => 500
            idle_flush_time => 1
            user => "elastic"
            password => "<password>"
        }
        s3 {
            access_key_id => "<SERVER_ENVIRONMENT_ACCESS_KEY_ID>"
            secret_access_key => "<SERVER_ENVIRONMENT_ACCESS_SECRET_ACCESS_KEY>"
            region => "cn-north-1"
            bucket => "<S3_BUCKEET_NAME>"
            upload_workers_count => 2
            prefix => "%{role}/%{topic}/%{host}/"
            size_file => 16777216
            time_file => 120
            codec => "json_lines"
        }
    }
}
